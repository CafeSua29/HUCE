#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace HUCE.Models
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
    using System.ComponentModel.DataAnnotations;

    [global::System.Data.Linq.Mapping.DatabaseAttribute(Name="HUCE")]
	public partial class DBConnecterDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertChuongTrinhKhung(ChuongTrinhKhung instance);
    partial void UpdateChuongTrinhKhung(ChuongTrinhKhung instance);
    partial void DeleteChuongTrinhKhung(ChuongTrinhKhung instance);
    partial void InsertDanhSachLop(DanhSachLop instance);
    partial void UpdateDanhSachLop(DanhSachLop instance);
    partial void DeleteDanhSachLop(DanhSachLop instance);
    partial void InsertDiemRenLuyen(DiemRenLuyen instance);
    partial void UpdateDiemRenLuyen(DiemRenLuyen instance);
    partial void DeleteDiemRenLuyen(DiemRenLuyen instance);
    partial void InsertGiangVien(GiangVien instance);
    partial void UpdateGiangVien(GiangVien instance);
    partial void DeleteGiangVien(GiangVien instance);
    partial void InsertHocKy(HocKy instance);
    partial void UpdateHocKy(HocKy instance);
    partial void DeleteHocKy(HocKy instance);
    partial void InsertKetQua(KetQua instance);
    partial void UpdateKetQua(KetQua instance);
    partial void DeleteKetQua(KetQua instance);
    partial void InsertKhoa(Khoa instance);
    partial void UpdateKhoa(Khoa instance);
    partial void DeleteKhoa(Khoa instance);
    partial void InsertLop(Lop instance);
    partial void UpdateLop(Lop instance);
    partial void DeleteLop(Lop instance);
    partial void InsertMonHoc(MonHoc instance);
    partial void UpdateMonHoc(MonHoc instance);
    partial void DeleteMonHoc(MonHoc instance);
    partial void InsertNamHoc(NamHoc instance);
    partial void UpdateNamHoc(NamHoc instance);
    partial void DeleteNamHoc(NamHoc instance);
    partial void InsertSinhVien(SinhVien instance);
    partial void UpdateSinhVien(SinhVien instance);
    partial void DeleteSinhVien(SinhVien instance);
    partial void InsertTaiKhoan(TaiKhoan instance);
    partial void UpdateTaiKhoan(TaiKhoan instance);
    partial void DeleteTaiKhoan(TaiKhoan instance);
    partial void InsertTieuChiDiemRenLuyen(TieuChiDiemRenLuyen instance);
    partial void UpdateTieuChiDiemRenLuyen(TieuChiDiemRenLuyen instance);
    partial void DeleteTieuChiDiemRenLuyen(TieuChiDiemRenLuyen instance);
        #endregion

        public DBConnecterDataContext() :
			base(global::System.Configuration.ConfigurationManager.ConnectionStrings["HUCEConnectionString"].ConnectionString, mappingSource)
        {
            OnCreated();
        }

        public DBConnecterDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DBConnecterDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DBConnecterDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DBConnecterDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<ChuongTrinhKhung> ChuongTrinhKhungs
		{
			get
			{
				return this.GetTable<ChuongTrinhKhung>();
			}
		}
		
		public System.Data.Linq.Table<DanhSachLop> DanhSachLops
		{
			get
			{
				return this.GetTable<DanhSachLop>();
			}
		}
		
		public System.Data.Linq.Table<DiemRenLuyen> DiemRenLuyens
		{
			get
			{
				return this.GetTable<DiemRenLuyen>();
			}
		}
		
		public System.Data.Linq.Table<GiangVien> GiangViens
		{
			get
			{
				return this.GetTable<GiangVien>();
			}
		}
		
		public System.Data.Linq.Table<HocKy> HocKies
		{
			get
			{
				return this.GetTable<HocKy>();
			}
		}
		
		public System.Data.Linq.Table<KetQua> KetQuas
		{
			get
			{
				return this.GetTable<KetQua>();
			}
		}
		
		public System.Data.Linq.Table<Khoa> Khoas
		{
			get
			{
				return this.GetTable<Khoa>();
			}
		}
		
		public System.Data.Linq.Table<Lop> Lops
		{
			get
			{
				return this.GetTable<Lop>();
			}
		}
		
		public System.Data.Linq.Table<MonHoc> MonHocs
		{
			get
			{
				return this.GetTable<MonHoc>();
			}
		}
		
		public System.Data.Linq.Table<NamHoc> NamHocs
		{
			get
			{
				return this.GetTable<NamHoc>();
			}
		}
		
		public System.Data.Linq.Table<SinhVien> SinhViens
		{
			get
			{
				return this.GetTable<SinhVien>();
			}
		}
		
		public System.Data.Linq.Table<TaiKhoan> TaiKhoans
		{
			get
			{
				return this.GetTable<TaiKhoan>();
			}
		}
		
		public System.Data.Linq.Table<TieuChiDiemRenLuyen> TieuChiDiemRenLuyens
		{
			get
			{
				return this.GetTable<TieuChiDiemRenLuyen>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ChuongTrinhKhung")]
	public partial class ChuongTrinhKhung : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaKhoa;
		
		private string _MaHK;
		
		private string _MaMH;
		
		private System.Nullable<System.DateTime> _DelTime;
		
		private EntityRef<HocKy> _HocKy;
		
		private EntityRef<Khoa> _Khoa;
		
		private EntityRef<MonHoc> _MonHoc;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaKhoaChanging(string value);
    partial void OnMaKhoaChanged();
    partial void OnMaHKChanging(string value);
    partial void OnMaHKChanged();
    partial void OnMaMHChanging(string value);
    partial void OnMaMHChanged();
    partial void OnDelTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnDelTimeChanged();
    #endregion
		
		public ChuongTrinhKhung()
		{
			this._HocKy = default(EntityRef<HocKy>);
			this._Khoa = default(EntityRef<Khoa>);
			this._MonHoc = default(EntityRef<MonHoc>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaKhoa", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
        [Display(Name = "Mã Khoa")]
        public string MaKhoa
		{
			get
			{
				return this._MaKhoa;
			}
			set
			{
				if ((this._MaKhoa != value))
				{
					if (this._Khoa.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaKhoaChanging(value);
					this.SendPropertyChanging();
					this._MaKhoa = value;
					this.SendPropertyChanged("MaKhoa");
					this.OnMaKhoaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaHK", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
        [Display(Name = "Mã Hoc Ky")]
        public string MaHK
		{
			get
			{
				return this._MaHK;
			}
			set
			{
				if ((this._MaHK != value))
				{
					if (this._HocKy.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaHKChanging(value);
					this.SendPropertyChanging();
					this._MaHK = value;
					this.SendPropertyChanged("MaHK");
					this.OnMaHKChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaMH", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
        [Display(Name = "Mã Mon Hoc")]
        public string MaMH
		{
			get
			{
				return this._MaMH;
			}
			set
			{
				if ((this._MaMH != value))
				{
					if (this._MonHoc.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaMHChanging(value);
					this.SendPropertyChanging();
					this._MaMH = value;
					this.SendPropertyChanged("MaMH");
					this.OnMaMHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DelTime", DbType="Date")]
		public System.Nullable<System.DateTime> DelTime
		{
			get
			{
				return this._DelTime;
			}
			set
			{
				if ((this._DelTime != value))
				{
					this.OnDelTimeChanging(value);
					this.SendPropertyChanging();
					this._DelTime = value;
					this.SendPropertyChanged("DelTime");
					this.OnDelTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HocKy_ChuongTrinhKhung", Storage="_HocKy", ThisKey="MaHK", OtherKey="MaHK", IsForeignKey=true)]
		public HocKy HocKy
		{
			get
			{
				return this._HocKy.Entity;
			}
			set
			{
				HocKy previousValue = this._HocKy.Entity;
				if (((previousValue != value) 
							|| (this._HocKy.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._HocKy.Entity = null;
						previousValue.ChuongTrinhKhungs.Remove(this);
					}
					this._HocKy.Entity = value;
					if ((value != null))
					{
						value.ChuongTrinhKhungs.Add(this);
						this._MaHK = value.MaHK;
					}
					else
					{
						this._MaHK = default(string);
					}
					this.SendPropertyChanged("HocKy");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Khoa_ChuongTrinhKhung", Storage="_Khoa", ThisKey="MaKhoa", OtherKey="MaKhoa", IsForeignKey=true)]
		public Khoa Khoa
		{
			get
			{
				return this._Khoa.Entity;
			}
			set
			{
				Khoa previousValue = this._Khoa.Entity;
				if (((previousValue != value) 
							|| (this._Khoa.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Khoa.Entity = null;
						previousValue.ChuongTrinhKhungs.Remove(this);
					}
					this._Khoa.Entity = value;
					if ((value != null))
					{
						value.ChuongTrinhKhungs.Add(this);
						this._MaKhoa = value.MaKhoa;
					}
					else
					{
						this._MaKhoa = default(string);
					}
					this.SendPropertyChanged("Khoa");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MonHoc_ChuongTrinhKhung", Storage="_MonHoc", ThisKey="MaMH", OtherKey="MaMH", IsForeignKey=true)]
		public MonHoc MonHoc
		{
			get
			{
				return this._MonHoc.Entity;
			}
			set
			{
				MonHoc previousValue = this._MonHoc.Entity;
				if (((previousValue != value) 
							|| (this._MonHoc.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MonHoc.Entity = null;
						previousValue.ChuongTrinhKhungs.Remove(this);
					}
					this._MonHoc.Entity = value;
					if ((value != null))
					{
						value.ChuongTrinhKhungs.Add(this);
						this._MaMH = value.MaMH;
					}
					else
					{
						this._MaMH = default(string);
					}
					this.SendPropertyChanged("MonHoc");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DanhSachLop")]
	public partial class DanhSachLop : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaLop;
		
		private string _MaMH;
		
		private string _MaHK;
		
		private string _MaSV;
		
		private System.Nullable<System.DateTime> _DelTime;
		
		private EntityRef<HocKy> _HocKy;
		
		private EntityRef<Lop> _Lop;
		
		private EntityRef<MonHoc> _MonHoc;
		
		private EntityRef<SinhVien> _SinhVien;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaLopChanging(string value);
    partial void OnMaLopChanged();
    partial void OnMaMHChanging(string value);
    partial void OnMaMHChanged();
    partial void OnMaHKChanging(string value);
    partial void OnMaHKChanged();
    partial void OnMaSVChanging(string value);
    partial void OnMaSVChanged();
    partial void OnDelTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnDelTimeChanged();
    #endregion
		
		public DanhSachLop()
		{
			this._HocKy = default(EntityRef<HocKy>);
			this._Lop = default(EntityRef<Lop>);
			this._MonHoc = default(EntityRef<MonHoc>);
			this._SinhVien = default(EntityRef<SinhVien>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaLop", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
        [Display(Name = "Mã Lop")]
        public string MaLop
		{
			get
			{
				return this._MaLop;
			}
			set
			{
				if ((this._MaLop != value))
				{
					if (this._Lop.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaLopChanging(value);
					this.SendPropertyChanging();
					this._MaLop = value;
					this.SendPropertyChanged("MaLop");
					this.OnMaLopChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaMH", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
        [Display(Name = "Mã Mon Hoc")]
        public string MaMH
		{
			get
			{
				return this._MaMH;
			}
			set
			{
				if ((this._MaMH != value))
				{
					if (this._MonHoc.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaMHChanging(value);
					this.SendPropertyChanging();
					this._MaMH = value;
					this.SendPropertyChanged("MaMH");
					this.OnMaMHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaHK", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
        [Display(Name = "Mã Hoc Ky")]
        public string MaHK
		{
			get
			{
				return this._MaHK;
			}
			set
			{
				if ((this._MaHK != value))
				{
					if (this._HocKy.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaHKChanging(value);
					this.SendPropertyChanging();
					this._MaHK = value;
					this.SendPropertyChanged("MaHK");
					this.OnMaHKChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaSV", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
        [Display(Name = "Mã Sinh Vien")]
        public string MaSV
		{
			get
			{
				return this._MaSV;
			}
			set
			{
				if ((this._MaSV != value))
				{
					if (this._SinhVien.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaSVChanging(value);
					this.SendPropertyChanging();
					this._MaSV = value;
					this.SendPropertyChanged("MaSV");
					this.OnMaSVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DelTime", DbType="Date")]
		public System.Nullable<System.DateTime> DelTime
		{
			get
			{
				return this._DelTime;
			}
			set
			{
				if ((this._DelTime != value))
				{
					this.OnDelTimeChanging(value);
					this.SendPropertyChanging();
					this._DelTime = value;
					this.SendPropertyChanged("DelTime");
					this.OnDelTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HocKy_DanhSachLop", Storage="_HocKy", ThisKey="MaHK", OtherKey="MaHK", IsForeignKey=true)]
		public HocKy HocKy
		{
			get
			{
				return this._HocKy.Entity;
			}
			set
			{
				HocKy previousValue = this._HocKy.Entity;
				if (((previousValue != value) 
							|| (this._HocKy.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._HocKy.Entity = null;
						previousValue.DanhSachLops.Remove(this);
					}
					this._HocKy.Entity = value;
					if ((value != null))
					{
						value.DanhSachLops.Add(this);
						this._MaHK = value.MaHK;
					}
					else
					{
						this._MaHK = default(string);
					}
					this.SendPropertyChanged("HocKy");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Lop_DanhSachLop", Storage="_Lop", ThisKey="MaLop", OtherKey="MaLop", IsForeignKey=true)]
		public Lop Lop
		{
			get
			{
				return this._Lop.Entity;
			}
			set
			{
				Lop previousValue = this._Lop.Entity;
				if (((previousValue != value) 
							|| (this._Lop.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Lop.Entity = null;
						previousValue.DanhSachLops.Remove(this);
					}
					this._Lop.Entity = value;
					if ((value != null))
					{
						value.DanhSachLops.Add(this);
						this._MaLop = value.MaLop;
					}
					else
					{
						this._MaLop = default(string);
					}
					this.SendPropertyChanged("Lop");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MonHoc_DanhSachLop", Storage="_MonHoc", ThisKey="MaMH", OtherKey="MaMH", IsForeignKey=true)]
		public MonHoc MonHoc
		{
			get
			{
				return this._MonHoc.Entity;
			}
			set
			{
				MonHoc previousValue = this._MonHoc.Entity;
				if (((previousValue != value) 
							|| (this._MonHoc.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MonHoc.Entity = null;
						previousValue.DanhSachLops.Remove(this);
					}
					this._MonHoc.Entity = value;
					if ((value != null))
					{
						value.DanhSachLops.Add(this);
						this._MaMH = value.MaMH;
					}
					else
					{
						this._MaMH = default(string);
					}
					this.SendPropertyChanged("MonHoc");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SinhVien_DanhSachLop", Storage="_SinhVien", ThisKey="MaSV", OtherKey="MaSV", IsForeignKey=true)]
		public SinhVien SinhVien
		{
			get
			{
				return this._SinhVien.Entity;
			}
			set
			{
				SinhVien previousValue = this._SinhVien.Entity;
				if (((previousValue != value) 
							|| (this._SinhVien.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SinhVien.Entity = null;
						previousValue.DanhSachLops.Remove(this);
					}
					this._SinhVien.Entity = value;
					if ((value != null))
					{
						value.DanhSachLops.Add(this);
						this._MaSV = value.MaSV;
					}
					else
					{
						this._MaSV = default(string);
					}
					this.SendPropertyChanged("SinhVien");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DiemRenLuyen")]
	public partial class DiemRenLuyen : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaSV;
		
		private string _MaTC;
		
		private System.Nullable<float> _Diem;
		
		private System.Nullable<System.DateTime> _DelTime;
		
		private EntityRef<SinhVien> _SinhVien;
		
		private EntityRef<TieuChiDiemRenLuyen> _TieuChiDiemRenLuyen;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaSVChanging(string value);
    partial void OnMaSVChanged();
    partial void OnMaTCChanging(string value);
    partial void OnMaTCChanged();
    partial void OnDiemChanging(System.Nullable<float> value);
    partial void OnDiemChanged();
    partial void OnDelTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnDelTimeChanged();
    #endregion
		
		public DiemRenLuyen()
		{
			this._SinhVien = default(EntityRef<SinhVien>);
			this._TieuChiDiemRenLuyen = default(EntityRef<TieuChiDiemRenLuyen>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaSV", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
        [Display(Name = "Mã Sinh Vien")]
        public string MaSV
		{
			get
			{
				return this._MaSV;
			}
			set
			{
				if ((this._MaSV != value))
				{
					if (this._SinhVien.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaSVChanging(value);
					this.SendPropertyChanging();
					this._MaSV = value;
					this.SendPropertyChanged("MaSV");
					this.OnMaSVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaTC", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
        [Display(Name = "Mã Tieu Chi")]
        public string MaTC
		{
			get
			{
				return this._MaTC;
			}
			set
			{
				if ((this._MaTC != value))
				{
					if (this._TieuChiDiemRenLuyen.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaTCChanging(value);
					this.SendPropertyChanging();
					this._MaTC = value;
					this.SendPropertyChanged("MaTC");
					this.OnMaTCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Diem", DbType="Real")]
        [Display(Name = "Diem")]
        public System.Nullable<float> Diem
		{
			get
			{
				return this._Diem;
			}
			set
			{
				if ((this._Diem != value))
				{
					this.OnDiemChanging(value);
					this.SendPropertyChanging();
					this._Diem = value;
					this.SendPropertyChanged("Diem");
					this.OnDiemChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DelTime", DbType="Date")]
		public System.Nullable<System.DateTime> DelTime
		{
			get
			{
				return this._DelTime;
			}
			set
			{
				if ((this._DelTime != value))
				{
					this.OnDelTimeChanging(value);
					this.SendPropertyChanging();
					this._DelTime = value;
					this.SendPropertyChanged("DelTime");
					this.OnDelTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SinhVien_DiemRenLuyen", Storage="_SinhVien", ThisKey="MaSV", OtherKey="MaSV", IsForeignKey=true)]
		public SinhVien SinhVien
		{
			get
			{
				return this._SinhVien.Entity;
			}
			set
			{
				SinhVien previousValue = this._SinhVien.Entity;
				if (((previousValue != value) 
							|| (this._SinhVien.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SinhVien.Entity = null;
						previousValue.DiemRenLuyens.Remove(this);
					}
					this._SinhVien.Entity = value;
					if ((value != null))
					{
						value.DiemRenLuyens.Add(this);
						this._MaSV = value.MaSV;
					}
					else
					{
						this._MaSV = default(string);
					}
					this.SendPropertyChanged("SinhVien");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TieuChiDiemRenLuyen_DiemRenLuyen", Storage="_TieuChiDiemRenLuyen", ThisKey="MaTC", OtherKey="MaTC", IsForeignKey=true)]
		public TieuChiDiemRenLuyen TieuChiDiemRenLuyen
		{
			get
			{
				return this._TieuChiDiemRenLuyen.Entity;
			}
			set
			{
				TieuChiDiemRenLuyen previousValue = this._TieuChiDiemRenLuyen.Entity;
				if (((previousValue != value) 
							|| (this._TieuChiDiemRenLuyen.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TieuChiDiemRenLuyen.Entity = null;
						previousValue.DiemRenLuyens.Remove(this);
					}
					this._TieuChiDiemRenLuyen.Entity = value;
					if ((value != null))
					{
						value.DiemRenLuyens.Add(this);
						this._MaTC = value.MaTC;
					}
					else
					{
						this._MaTC = default(string);
					}
					this.SendPropertyChanged("TieuChiDiemRenLuyen");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.GiangVien")]
	public partial class GiangVien : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaGV;
		
		private string _TenGV;
		
		private bool _GioiTinh;
		
		private System.DateTime _NgaySinh;
		
		private string _QueQuan;
		
		private string _SoDienThoai;
		
		private string _Email;
		
		private System.Nullable<System.DateTime> _DelTime;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaGVChanging(string value);
    partial void OnMaGVChanged();
    partial void OnTenGVChanging(string value);
    partial void OnTenGVChanged();
    partial void OnGioiTinhChanging(bool value);
    partial void OnGioiTinhChanged();
    partial void OnNgaySinhChanging(System.DateTime value);
    partial void OnNgaySinhChanged();
    partial void OnQueQuanChanging(string value);
    partial void OnQueQuanChanged();
    partial void OnSoDienThoaiChanging(string value);
    partial void OnSoDienThoaiChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnDelTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnDelTimeChanged();
    #endregion
		
		public GiangVien()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaGV", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
        [Display(Name = "Ma Giang Vien")]
        public string MaGV
		{
			get
			{
				return this._MaGV;
			}
			set
			{
				if ((this._MaGV != value))
				{
					this.OnMaGVChanging(value);
					this.SendPropertyChanging();
					this._MaGV = value;
					this.SendPropertyChanged("MaGV");
					this.OnMaGVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenGV", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
        [Display(Name = "Ten Giang Vien")]
        public string TenGV
		{
			get
			{
				return this._TenGV;
			}
			set
			{
				if ((this._TenGV != value))
				{
					this.OnTenGVChanging(value);
					this.SendPropertyChanging();
					this._TenGV = value;
					this.SendPropertyChanged("TenGV");
					this.OnTenGVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GioiTinh", DbType="Bit NOT NULL")]
        [Display(Name = "Gioi Tinh")]
        public bool GioiTinh
		{
			get
			{
				return this._GioiTinh;
			}
			set
			{
				if ((this._GioiTinh != value))
				{
					this.OnGioiTinhChanging(value);
					this.SendPropertyChanging();
					this._GioiTinh = value;
					this.SendPropertyChanged("GioiTinh");
					this.OnGioiTinhChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgaySinh", DbType="Date NOT NULL")]
        [DataType(DataType.Date)]
        [Display(Name = "Ngay Sinh")]
        public System.DateTime NgaySinh
		{
			get
			{
				return this._NgaySinh;
			}
			set
			{
				if ((this._NgaySinh != value))
				{
					this.OnNgaySinhChanging(value);
					this.SendPropertyChanging();
					this._NgaySinh = value;
					this.SendPropertyChanged("NgaySinh");
					this.OnNgaySinhChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QueQuan", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
        [Display(Name = "Que Quan")]
        public string QueQuan
		{
			get
			{
				return this._QueQuan;
			}
			set
			{
				if ((this._QueQuan != value))
				{
					this.OnQueQuanChanging(value);
					this.SendPropertyChanging();
					this._QueQuan = value;
					this.SendPropertyChanged("QueQuan");
					this.OnQueQuanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SoDienThoai", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
        [Display(Name = "So Dien Thoai")]
        public string SoDienThoai
		{
			get
			{
				return this._SoDienThoai;
			}
			set
			{
				if ((this._SoDienThoai != value))
				{
					this.OnSoDienThoaiChanging(value);
					this.SendPropertyChanging();
					this._SoDienThoai = value;
					this.SendPropertyChanged("SoDienThoai");
					this.OnSoDienThoaiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
        [Display(Name = "Email")]
        public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DelTime", DbType="Date")]
		public System.Nullable<System.DateTime> DelTime
		{
			get
			{
				return this._DelTime;
			}
			set
			{
				if ((this._DelTime != value))
				{
					this.OnDelTimeChanging(value);
					this.SendPropertyChanging();
					this._DelTime = value;
					this.SendPropertyChanged("DelTime");
					this.OnDelTimeChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.HocKy")]
	public partial class HocKy : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaHK;
		
		private string _TenHK;
		
		private string _MaNH;
		
		private System.Nullable<System.DateTime> _DelTime;
		
		private EntitySet<ChuongTrinhKhung> _ChuongTrinhKhungs;
		
		private EntitySet<DanhSachLop> _DanhSachLops;
		
		private EntityRef<NamHoc> _NamHoc;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaHKChanging(string value);
    partial void OnMaHKChanged();
    partial void OnTenHKChanging(string value);
    partial void OnTenHKChanged();
    partial void OnMaNHChanging(string value);
    partial void OnMaNHChanged();
    partial void OnDelTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnDelTimeChanged();
    #endregion
		
		public HocKy()
		{
			this._ChuongTrinhKhungs = new EntitySet<ChuongTrinhKhung>(new Action<ChuongTrinhKhung>(this.attach_ChuongTrinhKhungs), new Action<ChuongTrinhKhung>(this.detach_ChuongTrinhKhungs));
			this._DanhSachLops = new EntitySet<DanhSachLop>(new Action<DanhSachLop>(this.attach_DanhSachLops), new Action<DanhSachLop>(this.detach_DanhSachLops));
			this._NamHoc = default(EntityRef<NamHoc>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaHK", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
        [Display(Name = "Ma Hoc Ky")]
        public string MaHK
		{
			get
			{
				return this._MaHK;
			}
			set
			{
				if ((this._MaHK != value))
				{
					this.OnMaHKChanging(value);
					this.SendPropertyChanging();
					this._MaHK = value;
					this.SendPropertyChanged("MaHK");
					this.OnMaHKChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenHK", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
        [Display(Name = "Ten Hoc Ky")]
        public string TenHK
		{
			get
			{
				return this._TenHK;
			}
			set
			{
				if ((this._TenHK != value))
				{
					this.OnTenHKChanging(value);
					this.SendPropertyChanging();
					this._TenHK = value;
					this.SendPropertyChanged("TenHK");
					this.OnTenHKChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaNH", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
        [Display(Name = "Ma Nam Hoc")]
        public string MaNH
		{
			get
			{
				return this._MaNH;
			}
			set
			{
				if ((this._MaNH != value))
				{
					if (this._NamHoc.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaNHChanging(value);
					this.SendPropertyChanging();
					this._MaNH = value;
					this.SendPropertyChanged("MaNH");
					this.OnMaNHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DelTime", DbType="Date")]
		public System.Nullable<System.DateTime> DelTime
		{
			get
			{
				return this._DelTime;
			}
			set
			{
				if ((this._DelTime != value))
				{
					this.OnDelTimeChanging(value);
					this.SendPropertyChanging();
					this._DelTime = value;
					this.SendPropertyChanged("DelTime");
					this.OnDelTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HocKy_ChuongTrinhKhung", Storage="_ChuongTrinhKhungs", ThisKey="MaHK", OtherKey="MaHK")]
		public EntitySet<ChuongTrinhKhung> ChuongTrinhKhungs
		{
			get
			{
				return this._ChuongTrinhKhungs;
			}
			set
			{
				this._ChuongTrinhKhungs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HocKy_DanhSachLop", Storage="_DanhSachLops", ThisKey="MaHK", OtherKey="MaHK")]
		public EntitySet<DanhSachLop> DanhSachLops
		{
			get
			{
				return this._DanhSachLops;
			}
			set
			{
				this._DanhSachLops.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NamHoc_HocKy", Storage="_NamHoc", ThisKey="MaNH", OtherKey="MaNH", IsForeignKey=true)]
		public NamHoc NamHoc
		{
			get
			{
				return this._NamHoc.Entity;
			}
			set
			{
				NamHoc previousValue = this._NamHoc.Entity;
				if (((previousValue != value) 
							|| (this._NamHoc.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._NamHoc.Entity = null;
						previousValue.HocKies.Remove(this);
					}
					this._NamHoc.Entity = value;
					if ((value != null))
					{
						value.HocKies.Add(this);
						this._MaNH = value.MaNH;
					}
					else
					{
						this._MaNH = default(string);
					}
					this.SendPropertyChanged("NamHoc");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ChuongTrinhKhungs(ChuongTrinhKhung entity)
		{
			this.SendPropertyChanging();
			entity.HocKy = this;
		}
		
		private void detach_ChuongTrinhKhungs(ChuongTrinhKhung entity)
		{
			this.SendPropertyChanging();
			entity.HocKy = null;
		}
		
		private void attach_DanhSachLops(DanhSachLop entity)
		{
			this.SendPropertyChanging();
			entity.HocKy = this;
		}
		
		private void detach_DanhSachLops(DanhSachLop entity)
		{
			this.SendPropertyChanging();
			entity.HocKy = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.KetQua")]
	public partial class KetQua : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaSV;
		
		private string _MaMH;
		
		private System.Nullable<float> _DiemGiuaKy;
		
		private System.Nullable<float> _DiemQuaTrinh;
		
		private System.Nullable<float> _DiemCuoiKy;
		
		private System.Nullable<float> _DiemTongKet;
		
		private System.Nullable<bool> _BaoLuu;
		
		private System.Nullable<System.DateTime> _DelTime;
		
		private EntityRef<MonHoc> _MonHoc;
		
		private EntityRef<SinhVien> _SinhVien;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaSVChanging(string value);
    partial void OnMaSVChanged();
    partial void OnMaMHChanging(string value);
    partial void OnMaMHChanged();
    partial void OnDiemGiuaKyChanging(System.Nullable<float> value);
    partial void OnDiemGiuaKyChanged();
    partial void OnDiemQuaTrinhChanging(System.Nullable<float> value);
    partial void OnDiemQuaTrinhChanged();
    partial void OnDiemCuoiKyChanging(System.Nullable<float> value);
    partial void OnDiemCuoiKyChanged();
    partial void OnDiemTongKetChanging(System.Nullable<float> value);
    partial void OnDiemTongKetChanged();
    partial void OnBaoLuuChanging(System.Nullable<bool> value);
    partial void OnBaoLuuChanged();
    partial void OnDelTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnDelTimeChanged();
    #endregion
		
		public KetQua()
		{
			this._MonHoc = default(EntityRef<MonHoc>);
			this._SinhVien = default(EntityRef<SinhVien>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaSV", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
        [Display(Name = "Ma Sinh Vien")]
        public string MaSV
		{
			get
			{
				return this._MaSV;
			}
			set
			{
				if ((this._MaSV != value))
				{
					if (this._SinhVien.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaSVChanging(value);
					this.SendPropertyChanging();
					this._MaSV = value;
					this.SendPropertyChanged("MaSV");
					this.OnMaSVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaMH", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
        [Display(Name = "Ma Mon Hoc")]
        public string MaMH
		{
			get
			{
				return this._MaMH;
			}
			set
			{
				if ((this._MaMH != value))
				{
					if (this._MonHoc.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaMHChanging(value);
					this.SendPropertyChanging();
					this._MaMH = value;
					this.SendPropertyChanged("MaMH");
					this.OnMaMHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DiemGiuaKy", DbType="Real")]
		public System.Nullable<float> DiemGiuaKy
		{
			get
			{
				return this._DiemGiuaKy;
			}
			set
			{
				if ((this._DiemGiuaKy != value))
				{
					this.OnDiemGiuaKyChanging(value);
					this.SendPropertyChanging();
					this._DiemGiuaKy = value;
					this.SendPropertyChanged("DiemGiuaKy");
					this.OnDiemGiuaKyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DiemQuaTrinh", DbType="Real")]
		public System.Nullable<float> DiemQuaTrinh
		{
			get
			{
				return this._DiemQuaTrinh;
			}
			set
			{
				if ((this._DiemQuaTrinh != value))
				{
					this.OnDiemQuaTrinhChanging(value);
					this.SendPropertyChanging();
					this._DiemQuaTrinh = value;
					this.SendPropertyChanged("DiemQuaTrinh");
					this.OnDiemQuaTrinhChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DiemCuoiKy", DbType="Real")]
		public System.Nullable<float> DiemCuoiKy
		{
			get
			{
				return this._DiemCuoiKy;
			}
			set
			{
				if ((this._DiemCuoiKy != value))
				{
					this.OnDiemCuoiKyChanging(value);
					this.SendPropertyChanging();
					this._DiemCuoiKy = value;
					this.SendPropertyChanged("DiemCuoiKy");
					this.OnDiemCuoiKyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DiemTongKet", DbType="Real")]
		public System.Nullable<float> DiemTongKet
		{
			get
			{
				return this._DiemTongKet;
			}
			set
			{
				if ((this._DiemTongKet != value))
				{
					this.OnDiemTongKetChanging(value);
					this.SendPropertyChanging();
					this._DiemTongKet = value;
					this.SendPropertyChanged("DiemTongKet");
					this.OnDiemTongKetChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BaoLuu", DbType="Bit")]
		public System.Nullable<bool> BaoLuu
		{
			get
			{
				return this._BaoLuu;
			}
			set
			{
				if ((this._BaoLuu != value))
				{
					this.OnBaoLuuChanging(value);
					this.SendPropertyChanging();
					this._BaoLuu = value;
					this.SendPropertyChanged("BaoLuu");
					this.OnBaoLuuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DelTime", DbType="Date")]
		public System.Nullable<System.DateTime> DelTime
		{
			get
			{
				return this._DelTime;
			}
			set
			{
				if ((this._DelTime != value))
				{
					this.OnDelTimeChanging(value);
					this.SendPropertyChanging();
					this._DelTime = value;
					this.SendPropertyChanged("DelTime");
					this.OnDelTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MonHoc_KetQua", Storage="_MonHoc", ThisKey="MaMH", OtherKey="MaMH", IsForeignKey=true)]
		public MonHoc MonHoc
		{
			get
			{
				return this._MonHoc.Entity;
			}
			set
			{
				MonHoc previousValue = this._MonHoc.Entity;
				if (((previousValue != value) 
							|| (this._MonHoc.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MonHoc.Entity = null;
						previousValue.KetQuas.Remove(this);
					}
					this._MonHoc.Entity = value;
					if ((value != null))
					{
						value.KetQuas.Add(this);
						this._MaMH = value.MaMH;
					}
					else
					{
						this._MaMH = default(string);
					}
					this.SendPropertyChanged("MonHoc");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SinhVien_KetQua", Storage="_SinhVien", ThisKey="MaSV", OtherKey="MaSV", IsForeignKey=true)]
		public SinhVien SinhVien
		{
			get
			{
				return this._SinhVien.Entity;
			}
			set
			{
				SinhVien previousValue = this._SinhVien.Entity;
				if (((previousValue != value) 
							|| (this._SinhVien.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SinhVien.Entity = null;
						previousValue.KetQuas.Remove(this);
					}
					this._SinhVien.Entity = value;
					if ((value != null))
					{
						value.KetQuas.Add(this);
						this._MaSV = value.MaSV;
					}
					else
					{
						this._MaSV = default(string);
					}
					this.SendPropertyChanged("SinhVien");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Khoa")]
	public partial class Khoa : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaKhoa;
		
		private string _TenKhoa;
		
		private System.Nullable<System.DateTime> _DelTime;
		
		private EntitySet<ChuongTrinhKhung> _ChuongTrinhKhungs;
		
		private EntitySet<Lop> _Lops;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaKhoaChanging(string value);
    partial void OnMaKhoaChanged();
    partial void OnTenKhoaChanging(string value);
    partial void OnTenKhoaChanged();
    partial void OnDelTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnDelTimeChanged();
    #endregion
		
		public Khoa()
		{
			this._ChuongTrinhKhungs = new EntitySet<ChuongTrinhKhung>(new Action<ChuongTrinhKhung>(this.attach_ChuongTrinhKhungs), new Action<ChuongTrinhKhung>(this.detach_ChuongTrinhKhungs));
			this._Lops = new EntitySet<Lop>(new Action<Lop>(this.attach_Lops), new Action<Lop>(this.detach_Lops));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaKhoa", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaKhoa
		{
			get
			{
				return this._MaKhoa;
			}
			set
			{
				if ((this._MaKhoa != value))
				{
					this.OnMaKhoaChanging(value);
					this.SendPropertyChanging();
					this._MaKhoa = value;
					this.SendPropertyChanged("MaKhoa");
					this.OnMaKhoaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenKhoa", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string TenKhoa
		{
			get
			{
				return this._TenKhoa;
			}
			set
			{
				if ((this._TenKhoa != value))
				{
					this.OnTenKhoaChanging(value);
					this.SendPropertyChanging();
					this._TenKhoa = value;
					this.SendPropertyChanged("TenKhoa");
					this.OnTenKhoaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DelTime", DbType="Date")]
		public System.Nullable<System.DateTime> DelTime
		{
			get
			{
				return this._DelTime;
			}
			set
			{
				if ((this._DelTime != value))
				{
					this.OnDelTimeChanging(value);
					this.SendPropertyChanging();
					this._DelTime = value;
					this.SendPropertyChanged("DelTime");
					this.OnDelTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Khoa_ChuongTrinhKhung", Storage="_ChuongTrinhKhungs", ThisKey="MaKhoa", OtherKey="MaKhoa")]
		public EntitySet<ChuongTrinhKhung> ChuongTrinhKhungs
		{
			get
			{
				return this._ChuongTrinhKhungs;
			}
			set
			{
				this._ChuongTrinhKhungs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Khoa_Lop", Storage="_Lops", ThisKey="MaKhoa", OtherKey="MaKhoa")]
		public EntitySet<Lop> Lops
		{
			get
			{
				return this._Lops;
			}
			set
			{
				this._Lops.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ChuongTrinhKhungs(ChuongTrinhKhung entity)
		{
			this.SendPropertyChanging();
			entity.Khoa = this;
		}
		
		private void detach_ChuongTrinhKhungs(ChuongTrinhKhung entity)
		{
			this.SendPropertyChanging();
			entity.Khoa = null;
		}
		
		private void attach_Lops(Lop entity)
		{
			this.SendPropertyChanging();
			entity.Khoa = this;
		}
		
		private void detach_Lops(Lop entity)
		{
			this.SendPropertyChanging();
			entity.Khoa = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Lop")]
	public partial class Lop : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaLop;
		
		private string _TenLop;
		
		private string _MaKhoa;
		
		private System.Nullable<System.DateTime> _DelTime;
		
		private EntitySet<DanhSachLop> _DanhSachLops;
		
		private EntityRef<Khoa> _Khoa;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaLopChanging(string value);
    partial void OnMaLopChanged();
    partial void OnTenLopChanging(string value);
    partial void OnTenLopChanged();
    partial void OnMaKhoaChanging(string value);
    partial void OnMaKhoaChanged();
    partial void OnDelTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnDelTimeChanged();
    #endregion
		
		public Lop()
		{
			this._DanhSachLops = new EntitySet<DanhSachLop>(new Action<DanhSachLop>(this.attach_DanhSachLops), new Action<DanhSachLop>(this.detach_DanhSachLops));
			this._Khoa = default(EntityRef<Khoa>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaLop", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaLop
		{
			get
			{
				return this._MaLop;
			}
			set
			{
				if ((this._MaLop != value))
				{
					this.OnMaLopChanging(value);
					this.SendPropertyChanging();
					this._MaLop = value;
					this.SendPropertyChanged("MaLop");
					this.OnMaLopChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenLop", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string TenLop
		{
			get
			{
				return this._TenLop;
			}
			set
			{
				if ((this._TenLop != value))
				{
					this.OnTenLopChanging(value);
					this.SendPropertyChanging();
					this._TenLop = value;
					this.SendPropertyChanged("TenLop");
					this.OnTenLopChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaKhoa", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string MaKhoa
		{
			get
			{
				return this._MaKhoa;
			}
			set
			{
				if ((this._MaKhoa != value))
				{
					if (this._Khoa.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaKhoaChanging(value);
					this.SendPropertyChanging();
					this._MaKhoa = value;
					this.SendPropertyChanged("MaKhoa");
					this.OnMaKhoaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DelTime", DbType="Date")]
		public System.Nullable<System.DateTime> DelTime
		{
			get
			{
				return this._DelTime;
			}
			set
			{
				if ((this._DelTime != value))
				{
					this.OnDelTimeChanging(value);
					this.SendPropertyChanging();
					this._DelTime = value;
					this.SendPropertyChanged("DelTime");
					this.OnDelTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Lop_DanhSachLop", Storage="_DanhSachLops", ThisKey="MaLop", OtherKey="MaLop")]
		public EntitySet<DanhSachLop> DanhSachLops
		{
			get
			{
				return this._DanhSachLops;
			}
			set
			{
				this._DanhSachLops.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Khoa_Lop", Storage="_Khoa", ThisKey="MaKhoa", OtherKey="MaKhoa", IsForeignKey=true)]
		public Khoa Khoa
		{
			get
			{
				return this._Khoa.Entity;
			}
			set
			{
				Khoa previousValue = this._Khoa.Entity;
				if (((previousValue != value) 
							|| (this._Khoa.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Khoa.Entity = null;
						previousValue.Lops.Remove(this);
					}
					this._Khoa.Entity = value;
					if ((value != null))
					{
						value.Lops.Add(this);
						this._MaKhoa = value.MaKhoa;
					}
					else
					{
						this._MaKhoa = default(string);
					}
					this.SendPropertyChanged("Khoa");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_DanhSachLops(DanhSachLop entity)
		{
			this.SendPropertyChanging();
			entity.Lop = this;
		}
		
		private void detach_DanhSachLops(DanhSachLop entity)
		{
			this.SendPropertyChanging();
			entity.Lop = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MonHoc")]
	public partial class MonHoc : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaMH;
		
		private string _TenMH;
		
		private int _SoTin;
		
		private System.Nullable<System.DateTime> _DelTime;
		
		private EntitySet<ChuongTrinhKhung> _ChuongTrinhKhungs;
		
		private EntitySet<DanhSachLop> _DanhSachLops;
		
		private EntitySet<KetQua> _KetQuas;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaMHChanging(string value);
    partial void OnMaMHChanged();
    partial void OnTenMHChanging(string value);
    partial void OnTenMHChanged();
    partial void OnSoTinChanging(int value);
    partial void OnSoTinChanged();
    partial void OnDelTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnDelTimeChanged();
    #endregion
		
		public MonHoc()
		{
			this._ChuongTrinhKhungs = new EntitySet<ChuongTrinhKhung>(new Action<ChuongTrinhKhung>(this.attach_ChuongTrinhKhungs), new Action<ChuongTrinhKhung>(this.detach_ChuongTrinhKhungs));
			this._DanhSachLops = new EntitySet<DanhSachLop>(new Action<DanhSachLop>(this.attach_DanhSachLops), new Action<DanhSachLop>(this.detach_DanhSachLops));
			this._KetQuas = new EntitySet<KetQua>(new Action<KetQua>(this.attach_KetQuas), new Action<KetQua>(this.detach_KetQuas));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaMH", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaMH
		{
			get
			{
				return this._MaMH;
			}
			set
			{
				if ((this._MaMH != value))
				{
					this.OnMaMHChanging(value);
					this.SendPropertyChanging();
					this._MaMH = value;
					this.SendPropertyChanged("MaMH");
					this.OnMaMHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenMH", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string TenMH
		{
			get
			{
				return this._TenMH;
			}
			set
			{
				if ((this._TenMH != value))
				{
					this.OnTenMHChanging(value);
					this.SendPropertyChanging();
					this._TenMH = value;
					this.SendPropertyChanged("TenMH");
					this.OnTenMHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SoTin", DbType="Int NOT NULL")]
		public int SoTin
		{
			get
			{
				return this._SoTin;
			}
			set
			{
				if ((this._SoTin != value))
				{
					this.OnSoTinChanging(value);
					this.SendPropertyChanging();
					this._SoTin = value;
					this.SendPropertyChanged("SoTin");
					this.OnSoTinChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DelTime", DbType="Date")]
		public System.Nullable<System.DateTime> DelTime
		{
			get
			{
				return this._DelTime;
			}
			set
			{
				if ((this._DelTime != value))
				{
					this.OnDelTimeChanging(value);
					this.SendPropertyChanging();
					this._DelTime = value;
					this.SendPropertyChanged("DelTime");
					this.OnDelTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MonHoc_ChuongTrinhKhung", Storage="_ChuongTrinhKhungs", ThisKey="MaMH", OtherKey="MaMH")]
		public EntitySet<ChuongTrinhKhung> ChuongTrinhKhungs
		{
			get
			{
				return this._ChuongTrinhKhungs;
			}
			set
			{
				this._ChuongTrinhKhungs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MonHoc_DanhSachLop", Storage="_DanhSachLops", ThisKey="MaMH", OtherKey="MaMH")]
		public EntitySet<DanhSachLop> DanhSachLops
		{
			get
			{
				return this._DanhSachLops;
			}
			set
			{
				this._DanhSachLops.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MonHoc_KetQua", Storage="_KetQuas", ThisKey="MaMH", OtherKey="MaMH")]
		public EntitySet<KetQua> KetQuas
		{
			get
			{
				return this._KetQuas;
			}
			set
			{
				this._KetQuas.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ChuongTrinhKhungs(ChuongTrinhKhung entity)
		{
			this.SendPropertyChanging();
			entity.MonHoc = this;
		}
		
		private void detach_ChuongTrinhKhungs(ChuongTrinhKhung entity)
		{
			this.SendPropertyChanging();
			entity.MonHoc = null;
		}
		
		private void attach_DanhSachLops(DanhSachLop entity)
		{
			this.SendPropertyChanging();
			entity.MonHoc = this;
		}
		
		private void detach_DanhSachLops(DanhSachLop entity)
		{
			this.SendPropertyChanging();
			entity.MonHoc = null;
		}
		
		private void attach_KetQuas(KetQua entity)
		{
			this.SendPropertyChanging();
			entity.MonHoc = this;
		}
		
		private void detach_KetQuas(KetQua entity)
		{
			this.SendPropertyChanging();
			entity.MonHoc = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.NamHoc")]
	public partial class NamHoc : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaNH;
		
		private string _TenNH;
		
		private System.Nullable<System.DateTime> _DelTime;
		
		private EntitySet<HocKy> _HocKies;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaNHChanging(string value);
    partial void OnMaNHChanged();
    partial void OnTenNHChanging(string value);
    partial void OnTenNHChanged();
    partial void OnDelTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnDelTimeChanged();
    #endregion
		
		public NamHoc()
		{
			this._HocKies = new EntitySet<HocKy>(new Action<HocKy>(this.attach_HocKies), new Action<HocKy>(this.detach_HocKies));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaNH", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaNH
		{
			get
			{
				return this._MaNH;
			}
			set
			{
				if ((this._MaNH != value))
				{
					this.OnMaNHChanging(value);
					this.SendPropertyChanging();
					this._MaNH = value;
					this.SendPropertyChanged("MaNH");
					this.OnMaNHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenNH", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string TenNH
		{
			get
			{
				return this._TenNH;
			}
			set
			{
				if ((this._TenNH != value))
				{
					this.OnTenNHChanging(value);
					this.SendPropertyChanging();
					this._TenNH = value;
					this.SendPropertyChanged("TenNH");
					this.OnTenNHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DelTime", DbType="Date")]
		public System.Nullable<System.DateTime> DelTime
		{
			get
			{
				return this._DelTime;
			}
			set
			{
				if ((this._DelTime != value))
				{
					this.OnDelTimeChanging(value);
					this.SendPropertyChanging();
					this._DelTime = value;
					this.SendPropertyChanged("DelTime");
					this.OnDelTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NamHoc_HocKy", Storage="_HocKies", ThisKey="MaNH", OtherKey="MaNH")]
		public EntitySet<HocKy> HocKies
		{
			get
			{
				return this._HocKies;
			}
			set
			{
				this._HocKies.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_HocKies(HocKy entity)
		{
			this.SendPropertyChanging();
			entity.NamHoc = this;
		}
		
		private void detach_HocKies(HocKy entity)
		{
			this.SendPropertyChanging();
			entity.NamHoc = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SinhVien")]
	public partial class SinhVien : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaSV;
		
		private string _TenSV;
		
		private bool _GioiTinh;
		
		private System.DateTime _NgaySinh;
		
		private string _QueQuan;
		
		private string _SoDienThoai;
		
		private string _Email;
		
		private System.Nullable<System.DateTime> _DelTime;
		
		private EntitySet<DanhSachLop> _DanhSachLops;
		
		private EntitySet<DiemRenLuyen> _DiemRenLuyens;
		
		private EntitySet<KetQua> _KetQuas;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaSVChanging(string value);
    partial void OnMaSVChanged();
    partial void OnTenSVChanging(string value);
    partial void OnTenSVChanged();
    partial void OnGioiTinhChanging(bool value);
    partial void OnGioiTinhChanged();
    partial void OnNgaySinhChanging(System.DateTime value);
    partial void OnNgaySinhChanged();
    partial void OnQueQuanChanging(string value);
    partial void OnQueQuanChanged();
    partial void OnSoDienThoaiChanging(string value);
    partial void OnSoDienThoaiChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnDelTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnDelTimeChanged();
    #endregion
		
		public SinhVien()
		{
			this._DanhSachLops = new EntitySet<DanhSachLop>(new Action<DanhSachLop>(this.attach_DanhSachLops), new Action<DanhSachLop>(this.detach_DanhSachLops));
			this._DiemRenLuyens = new EntitySet<DiemRenLuyen>(new Action<DiemRenLuyen>(this.attach_DiemRenLuyens), new Action<DiemRenLuyen>(this.detach_DiemRenLuyens));
			this._KetQuas = new EntitySet<KetQua>(new Action<KetQua>(this.attach_KetQuas), new Action<KetQua>(this.detach_KetQuas));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaSV", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaSV
		{
			get
			{
				return this._MaSV;
			}
			set
			{
				if ((this._MaSV != value))
				{
					this.OnMaSVChanging(value);
					this.SendPropertyChanging();
					this._MaSV = value;
					this.SendPropertyChanged("MaSV");
					this.OnMaSVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenSV", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string TenSV
		{
			get
			{
				return this._TenSV;
			}
			set
			{
				if ((this._TenSV != value))
				{
					this.OnTenSVChanging(value);
					this.SendPropertyChanging();
					this._TenSV = value;
					this.SendPropertyChanged("TenSV");
					this.OnTenSVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GioiTinh", DbType="Bit NOT NULL")]
		public bool GioiTinh
		{
			get
			{
				return this._GioiTinh;
			}
			set
			{
				if ((this._GioiTinh != value))
				{
					this.OnGioiTinhChanging(value);
					this.SendPropertyChanging();
					this._GioiTinh = value;
					this.SendPropertyChanged("GioiTinh");
					this.OnGioiTinhChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgaySinh", DbType="Date NOT NULL")]
		public System.DateTime NgaySinh
		{
			get
			{
				return this._NgaySinh;
			}
			set
			{
				if ((this._NgaySinh != value))
				{
					this.OnNgaySinhChanging(value);
					this.SendPropertyChanging();
					this._NgaySinh = value;
					this.SendPropertyChanged("NgaySinh");
					this.OnNgaySinhChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QueQuan", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string QueQuan
		{
			get
			{
				return this._QueQuan;
			}
			set
			{
				if ((this._QueQuan != value))
				{
					this.OnQueQuanChanging(value);
					this.SendPropertyChanging();
					this._QueQuan = value;
					this.SendPropertyChanged("QueQuan");
					this.OnQueQuanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SoDienThoai", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string SoDienThoai
		{
			get
			{
				return this._SoDienThoai;
			}
			set
			{
				if ((this._SoDienThoai != value))
				{
					this.OnSoDienThoaiChanging(value);
					this.SendPropertyChanging();
					this._SoDienThoai = value;
					this.SendPropertyChanged("SoDienThoai");
					this.OnSoDienThoaiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DelTime", DbType="Date")]
		public System.Nullable<System.DateTime> DelTime
		{
			get
			{
				return this._DelTime;
			}
			set
			{
				if ((this._DelTime != value))
				{
					this.OnDelTimeChanging(value);
					this.SendPropertyChanging();
					this._DelTime = value;
					this.SendPropertyChanged("DelTime");
					this.OnDelTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SinhVien_DanhSachLop", Storage="_DanhSachLops", ThisKey="MaSV", OtherKey="MaSV")]
		public EntitySet<DanhSachLop> DanhSachLops
		{
			get
			{
				return this._DanhSachLops;
			}
			set
			{
				this._DanhSachLops.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SinhVien_DiemRenLuyen", Storage="_DiemRenLuyens", ThisKey="MaSV", OtherKey="MaSV")]
		public EntitySet<DiemRenLuyen> DiemRenLuyens
		{
			get
			{
				return this._DiemRenLuyens;
			}
			set
			{
				this._DiemRenLuyens.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SinhVien_KetQua", Storage="_KetQuas", ThisKey="MaSV", OtherKey="MaSV")]
		public EntitySet<KetQua> KetQuas
		{
			get
			{
				return this._KetQuas;
			}
			set
			{
				this._KetQuas.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_DanhSachLops(DanhSachLop entity)
		{
			this.SendPropertyChanging();
			entity.SinhVien = this;
		}
		
		private void detach_DanhSachLops(DanhSachLop entity)
		{
			this.SendPropertyChanging();
			entity.SinhVien = null;
		}
		
		private void attach_DiemRenLuyens(DiemRenLuyen entity)
		{
			this.SendPropertyChanging();
			entity.SinhVien = this;
		}
		
		private void detach_DiemRenLuyens(DiemRenLuyen entity)
		{
			this.SendPropertyChanging();
			entity.SinhVien = null;
		}
		
		private void attach_KetQuas(KetQua entity)
		{
			this.SendPropertyChanging();
			entity.SinhVien = this;
		}
		
		private void detach_KetQuas(KetQua entity)
		{
			this.SendPropertyChanging();
			entity.SinhVien = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TaiKhoan")]
	public partial class TaiKhoan : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _TenTaiKhoan;
		
		private string _MatKhau;
		
		private string _MaQuyen;
		
		private System.Nullable<System.DateTime> _DelTime;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTenTaiKhoanChanging(string value);
    partial void OnTenTaiKhoanChanged();
    partial void OnMatKhauChanging(string value);
    partial void OnMatKhauChanged();
    partial void OnMaQuyenChanging(string value);
    partial void OnMaQuyenChanged();
    partial void OnDelTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnDelTimeChanged();
    #endregion
		
		public TaiKhoan()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenTaiKhoan", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string TenTaiKhoan
		{
			get
			{
				return this._TenTaiKhoan;
			}
			set
			{
				if ((this._TenTaiKhoan != value))
				{
					this.OnTenTaiKhoanChanging(value);
					this.SendPropertyChanging();
					this._TenTaiKhoan = value;
					this.SendPropertyChanged("TenTaiKhoan");
					this.OnTenTaiKhoanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MatKhau", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string MatKhau
		{
			get
			{
				return this._MatKhau;
			}
			set
			{
				if ((this._MatKhau != value))
				{
					this.OnMatKhauChanging(value);
					this.SendPropertyChanging();
					this._MatKhau = value;
					this.SendPropertyChanged("MatKhau");
					this.OnMatKhauChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaQuyen", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string MaQuyen
		{
			get
			{
				return this._MaQuyen;
			}
			set
			{
				if ((this._MaQuyen != value))
				{
					this.OnMaQuyenChanging(value);
					this.SendPropertyChanging();
					this._MaQuyen = value;
					this.SendPropertyChanged("MaQuyen");
					this.OnMaQuyenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DelTime", DbType="Date")]
		public System.Nullable<System.DateTime> DelTime
		{
			get
			{
				return this._DelTime;
			}
			set
			{
				if ((this._DelTime != value))
				{
					this.OnDelTimeChanging(value);
					this.SendPropertyChanging();
					this._DelTime = value;
					this.SendPropertyChanged("DelTime");
					this.OnDelTimeChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TieuChiDiemRenLuyen")]
	public partial class TieuChiDiemRenLuyen : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaTC;
		
		private string _TenTC;
		
		private System.Nullable<System.DateTime> _DelTime;
		
		private EntitySet<DiemRenLuyen> _DiemRenLuyens;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaTCChanging(string value);
    partial void OnMaTCChanged();
    partial void OnTenTCChanging(string value);
    partial void OnTenTCChanged();
    partial void OnDelTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnDelTimeChanged();
    #endregion
		
		public TieuChiDiemRenLuyen()
		{
			this._DiemRenLuyens = new EntitySet<DiemRenLuyen>(new Action<DiemRenLuyen>(this.attach_DiemRenLuyens), new Action<DiemRenLuyen>(this.detach_DiemRenLuyens));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaTC", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaTC
		{
			get
			{
				return this._MaTC;
			}
			set
			{
				if ((this._MaTC != value))
				{
					this.OnMaTCChanging(value);
					this.SendPropertyChanging();
					this._MaTC = value;
					this.SendPropertyChanged("MaTC");
					this.OnMaTCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenTC", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string TenTC
		{
			get
			{
				return this._TenTC;
			}
			set
			{
				if ((this._TenTC != value))
				{
					this.OnTenTCChanging(value);
					this.SendPropertyChanging();
					this._TenTC = value;
					this.SendPropertyChanged("TenTC");
					this.OnTenTCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DelTime", DbType="Date")]
		public System.Nullable<System.DateTime> DelTime
		{
			get
			{
				return this._DelTime;
			}
			set
			{
				if ((this._DelTime != value))
				{
					this.OnDelTimeChanging(value);
					this.SendPropertyChanging();
					this._DelTime = value;
					this.SendPropertyChanged("DelTime");
					this.OnDelTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TieuChiDiemRenLuyen_DiemRenLuyen", Storage="_DiemRenLuyens", ThisKey="MaTC", OtherKey="MaTC")]
		public EntitySet<DiemRenLuyen> DiemRenLuyens
		{
			get
			{
				return this._DiemRenLuyens;
			}
			set
			{
				this._DiemRenLuyens.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_DiemRenLuyens(DiemRenLuyen entity)
		{
			this.SendPropertyChanging();
			entity.TieuChiDiemRenLuyen = this;
		}
		
		private void detach_DiemRenLuyens(DiemRenLuyen entity)
		{
			this.SendPropertyChanging();
			entity.TieuChiDiemRenLuyen = null;
		}
	}
}
#pragma warning restore 1591
